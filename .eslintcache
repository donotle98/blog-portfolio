[{"/Users/donovanle/myProjects/blog-site/src/index.js":"1","/Users/donovanle/myProjects/blog-site/src/App.js":"2","/Users/donovanle/myProjects/blog-site/src/LandingPage/LandingPage.js":"3","/Users/donovanle/myProjects/blog-site/src/LandingPage/Particles.js":"4","/Users/donovanle/myProjects/blog-site/src/Blog/Blog.js":"5"},{"size":207,"mtime":1611800573871,"results":"6","hashOfConfig":"7"},{"size":615,"mtime":1612302520679,"results":"8","hashOfConfig":"7"},{"size":4884,"mtime":1612302700486,"results":"9","hashOfConfig":"7"},{"size":1512,"mtime":1611813291186,"results":"10","hashOfConfig":"7"},{"size":6796,"mtime":1611938966341,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"105gjua",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/Users/donovanle/myProjects/blog-site/src/index.js",[],["24","25"],"/Users/donovanle/myProjects/blog-site/src/App.js",[],"/Users/donovanle/myProjects/blog-site/src/LandingPage/LandingPage.js",[],"/Users/donovanle/myProjects/blog-site/src/LandingPage/Particles.js",[],"/Users/donovanle/myProjects/blog-site/src/Blog/Blog.js",["26"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport mobileImg from './images/fotogra.jpg';\nimport desktopImg from './images/glenn.jpg';\n\nconst Blog = () => {\n    const [navBar, setNavBar] = useState(false);\n    const [pageValue, setPageValue] = useState(null);\n\n    const deskNavBar = () => {\n        return (\n            <div className='nav-bar'>\n                <button onClick={() => setPageValue('react')}>\n                    <span>React.js</span>\n                </button>\n                <button onClick={() => setPageValue('node')}>\n                    <span>Node.js</span>\n                </button>\n                <button onClick={() => setPageValue('js')}>\n                    <span>Javascript</span>\n                </button>\n                <button onClick={() => setPageValue('sql')}>\n                    <span>SQL</span>\n                </button>\n                <button onClick={() => setPageValue('postgres')}>\n                    <span>PostgreSQL</span>\n                </button>\n            </div>\n        );\n    };\n\n    const showNavBar = () => {\n        if (navBar) {\n            return (\n                <div className='nav-bar mobile-nav'>\n                    <button onClick={() => setPageValue('react')}>\n                        <span>React.js</span>\n                    </button>\n                    <button onClick={() => setPageValue('node')}>\n                        <span>Node.js</span>\n                    </button>\n                    <button onClick={() => setPageValue('js')}>\n                        <span>Javascript</span>\n                    </button>\n                    <button onClick={() => setPageValue('sql')}>\n                        <span>SQL</span>\n                    </button>\n                    <button onClick={() => setPageValue('postgres')}>\n                        <span>PostgreSQL</span>\n                    </button>\n                </div>\n            );\n        }\n    };\n    return (\n        <StyledWrapper>\n            <div className='wrapper'>\n                <header>\n                    <div className='background'></div>\n                    <h1>Donovan's Blog</h1>\n                    <h2>The Joy of Coding</h2>\n                    <div className='nav-btn'>\n                        <button\n                            onClick={() => {\n                                setNavBar((c) => !c);\n                                console.log('menu clicked');\n                            }}\n                        >\n                            Menu\n                        </button>\n                    </div>\n                    {showNavBar()}\n                    <div className='desktop-nav'>{deskNavBar()}</div>\n                </header>\n                <div className='post-previews'>\n                    <h1>Still in progress....</h1>\n                </div>\n            </div>\n        </StyledWrapper>\n    );\n};\n\nexport default Blog;\n\nconst StyledWrapper = styled.main`\n    .wrapper {\n        header {\n            .background {\n                position: fixed;\n                left: 0;\n                top: 0;\n                background-image: linear-gradient(\n                        rgba(0, 0, 0, 0.3),\n                        rgba(0, 0, 0, 0.3)\n                    ),\n                    url(${mobileImg});\n                background-size: cover;\n                background-position: center center;\n                width: 100%;\n                height: 18rem;\n                z-index: -100;\n            }\n\n            h1 {\n                font-size: 3rem;\n                text-align: center;\n                margin-top: 5rem;\n                color: white;\n            }\n            h2 {\n                font-size: 2rem;\n                text-align: center;\n                margin-top: 1rem;\n                color: white;\n            }\n\n            .nav-bar {\n                position: absolute;\n                top: 15.1rem;\n                left: 0;\n                width: 100%;\n                padding: 0.5rem;\n                padding-left: 0;\n                padding-right: 0;\n                background-color: #b6c2d9;\n                text-align: center;\n\n                button {\n                    cursor: pointer;\n                    padding: 0.5rem;\n                    border: none;\n                    background: transparent;\n                    transition: 0.5s;\n                }\n\n                button:hover {\n                    box-shadow: 6px 6px 4px black;\n                    transition: 0.5s;\n                }\n            }\n\n            .nav-btn {\n                position: absolute;\n                top: 13.3rem;\n                right: 0;\n\n                button {\n                    border: none;\n                    padding: 0.5rem 0.75rem 0.5rem 0.75rem;\n                    background-color: #b6c2d9;\n                    border: solid 2px #9e90a2;\n                }\n\n                button:focus {\n                    outline: none;\n                }\n            }\n\n            .desktop-nav {\n                display: none;\n            }\n        }\n        .post-previews {\n            position: absolute;\n            left: 0;\n            top: 18rem;\n            overflow-x: auto;\n            overflow-y: hidden;\n            white-space: nowrap;\n            width: 100%;\n            height: 10rem;\n            background-color: #272932;\n\n            h1 {\n                text-align: center;\n                color: red;\n                text-shadow: 4px 4px 7px black;\n                margin-top: 3rem;\n            }\n        }\n    }\n\n    @media all and (min-width: 750px) {\n        .wrapper {\n            header {\n                .background {\n                    background-image: linear-gradient(\n                            rgba(0, 0, 0, 0.3),\n                            rgba(0, 0, 0, 0.3)\n                        ),\n                        url(${desktopImg});\n                    background-size: cover;\n                    background-position: center center;\n                    height: 25rem;\n                }\n\n                h1 {\n                    font-size: 6rem;\n                }\n                h2 {\n                    font-size: 3.5rem;\n                }\n\n                .nav-bar {\n                    top: 22rem;\n                    button {\n                        font-size: 1.3rem;\n                        margin-right: 5rem;\n                    }\n                }\n                .nav-btn {\n                    display: none;\n                }\n                .desktop-nav {\n                    display: block;\n                }\n                .mobile-nav {\n                    display: none;\n                }\n            }\n            .post-previews {\n                top: 25.5rem;\n                height: 18rem;\n            }\n        }\n    } ;\n`;\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":8,"column":12,"nodeType":"33","messageId":"34","endLine":8,"endColumn":21},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'pageValue' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]