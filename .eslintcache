[{"/Users/donovanle/myProjects/blog-site/src/index.js":"1","/Users/donovanle/myProjects/blog-site/src/App.js":"2","/Users/donovanle/myProjects/blog-site/src/LandingPage/LandingPage.js":"3","/Users/donovanle/myProjects/blog-site/src/LandingPage/Particles.js":"4","/Users/donovanle/myProjects/blog-site/src/Blog/Blog.js":"5","/Users/donovanle/myProjects/blog-site/src/Blog/Previews/Previews.js":"6","/Users/donovanle/myProjects/blog-site/src/config.js":"7","/Users/donovanle/myProjects/blog-site/src/Blog/BodyPosts/BodyPosts.js":"8","/Users/donovanle/myProjects/blog-site/src/Blog/ChosenPost/ChosenPost.js":"9"},{"size":207,"mtime":1611800573871,"results":"10","hashOfConfig":"11"},{"size":615,"mtime":1612895015572,"results":"12","hashOfConfig":"11"},{"size":4884,"mtime":1612302700486,"results":"13","hashOfConfig":"11"},{"size":1512,"mtime":1611813291186,"results":"14","hashOfConfig":"11"},{"size":7831,"mtime":1614116643657,"results":"15","hashOfConfig":"11"},{"size":1803,"mtime":1614116388901,"results":"16","hashOfConfig":"11"},{"size":65,"mtime":1614026530325,"results":"17","hashOfConfig":"11"},{"size":1704,"mtime":1614116997756,"results":"18","hashOfConfig":"11"},{"size":1244,"mtime":1614116067167,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"105gjua",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/donovanle/myProjects/blog-site/src/index.js",[],["40","41"],"/Users/donovanle/myProjects/blog-site/src/App.js",[],"/Users/donovanle/myProjects/blog-site/src/LandingPage/LandingPage.js",[],"/Users/donovanle/myProjects/blog-site/src/LandingPage/Particles.js",[],"/Users/donovanle/myProjects/blog-site/src/Blog/Blog.js",["42","43"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport mobileImg from './images/fotogra.jpg';\nimport desktopImg from './images/glenn.jpg';\nimport { DB_URI } from '../config';\nimport Previews from './Previews/Previews';\nimport Body from './BodyPosts/BodyPosts';\nimport ChosenPost from './ChosenPost/ChosenPost';\n\nconst Blog = () => {\n    const [posts, setPosts] = useState(null);\n    const [error, setError] = useState(null);\n    const [id, setId] = useState(null);\n\n    const fetchPosts = async () => {\n        try {\n            const res = await fetch(`${DB_URI}blogs/all-blogs`);\n\n            const data = await res.json();\n\n            console.log(data);\n\n            if (!data) {\n                setError('No Blogs available');\n            }\n\n            setPosts(data);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    useEffect(() => {\n        fetchPosts();\n    }, []);\n\n    const handleChosenPost = () => {\n        if (id) {\n            return posts\n                ? posts.map((post, index) => {\n                      if (post._id === id) {\n                          return (\n                              <div className='user-picked-post' key={index}>\n                                  <button\n                                      className='all-posts-btn'\n                                      onClick={() => setId(null)}\n                                  >\n                                      All posts\n                                  </button>\n                                  <ChosenPost post={post} />\n                              </div>\n                          );\n                      }\n                  })\n                : null;\n        } else {\n            return (\n                <div className='all-body-posts'>\n                    {posts\n                        ? posts.map((post, index) => {\n                              return (\n                                  <div className='each-body-post' key={index}>\n                                      <Body post={post} setId={setId} />\n                                  </div>\n                              );\n                          })\n                        : null}\n                </div>\n            );\n        }\n    };\n\n    if (!posts) {\n        return (\n            <StyledLoading>\n                <div className='loading-posts'>\n                    <h1>Loading....</h1>\n                </div>\n            </StyledLoading>\n        );\n    }\n\n    return (\n        <StyledWrapper>\n            <div className='wrapper'>\n                <header>\n                    <div className='background'></div>\n                    <h1>The Joy of Coding</h1>\n                    <h2>By Donovan Le</h2>\n                </header>\n                <div className='post-previews'>\n                    {posts ? (\n                        posts.map((post, index) => {\n                            return (\n                                <Previews\n                                    post={post}\n                                    key={index}\n                                    setId={setId}\n                                />\n                            );\n                        })\n                    ) : (\n                        <span>Loading...</span>\n                    )}\n                </div>\n                <div className='body-posts'>{handleChosenPost()}</div>\n            </div>\n        </StyledWrapper>\n    );\n};\n\nexport default Blog;\n\nconst StyledWrapper = styled.main`\n    button:focus {\n        outline: none;\n    }\n    .all-posts-btn {\n        border: solid 2px black;\n        padding: 0.4rem 0.6rem;\n        background: transparent;\n        margin-bottom: 1rem;\n    }\n    .wrapper {\n        header {\n            .background {\n                position: absolute;\n                left: 0;\n                top: 0;\n                background-image: linear-gradient(\n                        rgba(0, 0, 0, 0.3),\n                        rgba(0, 0, 0, 0.3)\n                    ),\n                    url(${mobileImg});\n                background-size: cover;\n                background-position: center center;\n                width: 100%;\n                height: 14rem;\n                z-index: -100;\n            }\n\n            h1 {\n                font-size: 3rem;\n                text-align: center;\n                margin-top: 3rem;\n                color: white;\n            }\n            h2 {\n                font-size: 2rem;\n                text-align: center;\n                margin-top: 1rem;\n                color: white;\n            }\n        }\n        .post-previews {\n            display: flex;\n            position: absolute;\n            left: 0;\n            top: 12rem;\n            overflow-x: auto;\n            overflow-y: hidden;\n            width: 100%;\n            height: 10rem;\n            background-color: #272932;\n            align-items: center;\n            box-shadow: 0px 7px 10px black, 0px -7px 10px white;\n        }\n\n        .body-posts {\n            position: absolute;\n            top: 26rem;\n            display: flex;\n            width: 100%;\n            flex-direction: column;\n            align-items: center;\n            .user-picked-post {\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                justify-content: center;\n            }\n        }\n    }\n\n    @media all and (min-width: 750px) {\n        .wrapper {\n            header {\n                .background {\n                    background-image: linear-gradient(\n                            rgba(0, 0, 0, 0.3),\n                            rgba(0, 0, 0, 0.3)\n                        ),\n                        url(${desktopImg});\n                    background-size: cover;\n                    background-position: center center;\n                    height: 25rem;\n                }\n\n                h1 {\n                    font-size: 6rem;\n                }\n                h2 {\n                    font-size: 3.5rem;\n                }\n            }\n            .post-previews {\n                top: 23.5rem;\n                height: 13rem;\n            }\n            .body-posts {\n                position: absolute;\n                top: 38rem;\n                .all-body-posts {\n                    display: grid;\n                    grid-template-columns: repeat(2, 1fr);\n                    gap: 10px;\n                    width: 100%;\n                }\n\n                .each-body-post {\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                }\n            }\n        }\n    }\n\n    @media all and (min-width: 950px) {\n        .wrapper {\n            .body-posts {\n                position: absolute;\n                top: 40rem;\n                .all-body-posts {\n                    display: grid;\n                    grid-template-columns: repeat(3, 1fr);\n                    gap: 10px;\n                }\n            }\n        }\n    }\n`;\n\nconst StyledLoading = styled.div`\n    .loading-posts {\n        background: #d52e3f;\n        min-height: 100vh;\n        h1 {\n            font-size: 4rem;\n            text-align: center;\n            height: 90vh;\n            line-height: 90vh;\n            color: #fcedd8;\n            font-family: 'Niconne', cursive;\n            font-weight: 700;\n            text-shadow: 5px 5px 0px #eb452b, 10px 10px 0px #efa032,\n                15px 15px 0px #46b59b, 20px 20px 0px #017e7f,\n                25px 25px 0px #052939, 30px 30px 0px #c11a2b,\n                35px 35px 0px #c11a2b, 40px 40px 0px #c11a2b,\n                45px 45px 0px #c11a2b;\n        }\n    }\n\n    @media all and (min-width: 750px) {\n        .loading-posts {\n            h1 {\n                font-size: 10rem;\n            }\n        }\n    }\n`;\n","/Users/donovanle/myProjects/blog-site/src/Blog/Previews/Previews.js",[],"/Users/donovanle/myProjects/blog-site/src/config.js",[],"/Users/donovanle/myProjects/blog-site/src/Blog/BodyPosts/BodyPosts.js",[],"/Users/donovanle/myProjects/blog-site/src/Blog/ChosenPost/ChosenPost.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":12,"column":12,"nodeType":"50","messageId":"51","endLine":12,"endColumn":17},{"ruleId":"52","severity":1,"message":"53","line":40,"column":43,"nodeType":"54","messageId":"55","endLine":40,"endColumn":45},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]